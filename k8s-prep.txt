# --- Kubernetes --- #

# --- Set Hostname - Needed for K8s node label ---
hostnamectl

# --- Step 1: Update and Upgrade APT ---
echo "Updating and upgrading apt packages..."
sudo apt update -y
sudo apt upgrade -y
sudo apt autoremove -y

# --- Step 2: Disable Swap ---
# Kubernetes requires swap to be disabled for kubelet to function correctly.
echo "Disabling swap..."
sudo swapoff -a
# Remove swap entry from /etc/fstab to make the change persistent across reboots
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# Verify
sudo swapon --show
cat /etc/fstab | grep swap


# --- Step 3: Load Kernel Modules and Configure Sysctl Parameters ---
# These modules are required for Kubernetes networking (especially for CNI like Cilium).
echo "Loading kernel modules and configuring sysctl parameters..."
sudo modprobe overlay
sudo modprobe br_netfilter

# Add kernel modules to load at boot
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

# Verify
lsmod | grep overlay
lsmod | grep br_netfilter

# Configure sysctl parameters for Kubernetes networking
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl parameters immediately
sudo sysctl --system

# Reload
sudo reboot

# Verify
sysctl net.bridge.bridge-nf-call-iptables
sysctl net.bridge.bridge-nf-call-ip6tables
sysctl net.ipv4.ip_forward

# --- Step 4: Install Container Runtime (Containerd) ---
# Kubernetes uses a container runtime to run containers. Containerd is a popular choice.
echo "Installing containerd..."
# Corrected steps to add Docker's official GPG key and repository
sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg


# IMPORTANT: Run apt update again AFTER adding the Docker repository to refresh the package list
sudo apt update

# Install containerd
sudo apt install -y containerd.io

# Configure containerd to use systemd cgroup driver
sudo mkdir -p /etc/containerd
sudo containerd config default | sudo tee /etc/containerd/config.toml

# Corrected sed command: using '#' as a delimiter instead of '/'
sudo sed -i 's#SystemdCgroup = false#SystemdCgroup = true#' /etc/containerd/config.toml

# Restart containerd service
sudo systemctl restart containerd
sudo systemctl enable containerd

# Verify
sudo systemctl status containerd
sudo cat /etc/containerd/config.toml | grep SystemdCgroup

# --- Step 5: Install kubeadm, kubelet, and kubectl ---
# These are the core Kubernetes tools for cluster management.
echo "Installing kubeadm, kubelet, and kubectl..."
# Add Kubernetes GPG key
sudo apt update
sudo apt install -y apt-transport-https ca-certificates curl
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# Add Kubernetes APT repository
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

# Update apt package index and install kubelet, kubeadm, kubectl
sudo apt update
sudo apt install -y kubelet kubeadm kubectl

# Verify
kubeadm version
kubelet --version
kubectl version --client

# Hold packages to prevent automatic upgrades that might break the cluster
sudo apt-mark hold kubelet kubeadm kubectl

# Verify
sudo apt-mark showhold

echo "Initial setup complete on this node. Please run these commands on ALL your Ubuntu 22.04 nodes."